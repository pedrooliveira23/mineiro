<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security" 
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.2.xsd
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- Configuração do Hibernate -->

	<bean id="mineiroSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<qualifier value="mineiroSessionFactory" />
		<property name="configLocation">
			<value>
                            #{
                                systemProperties['mineiro.properties.dir'] != null ?
                                  'file:' + systemProperties['mineiro.properties.dir'] + '/hibernate-mineiro.cfg.xml' :
                                  'classpath:hibernate-mineiro.cfg.xml'
                              }
                            
				
			</value>
		</property>
                <property name="packagesToScan">
                    <array>
                         <value>br.jus.cjf.mineiro.model</value>
                         <value>br.jus.cjf.simus.model</value>
                    </array>
                </property>
                
	</bean>
	


	<bean id="mineiroTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<qualifier value="mineiroTransactionManager" />
		<property name="sessionFactory" ref="mineiroSessionFactory" />
	</bean>

	<bean id="redmineSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<qualifier value="redmineSessionFactory" />
		<property name="configLocation">
			<value>
                            #{
                                systemProperties['mineiro.properties.dir'] != null ?
                                  'file:' + systemProperties['mineiro.properties.dir'] + '/hibernate-redmine.cfg.xml' :
                                  'classpath:hibernate-redmine.cfg.xml'
                              }
				
			</value>
                        
		</property>
                <property name="packagesToScan" value="br.jus.cjf.redmine.model" />
                
	</bean>

	<bean id="redmineTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<qualifier value="redmineTransactionManager" />
		<property name="sessionFactory" ref="redmineSessionFactory" />
	</bean>

	<!--<bean id="simusSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<qualifier value="simusSessionFactory" />
		<property name="configLocation">
			<value>
                            #{
                                systemProperties['mineiro.properties.dir'] != null ?
                                  'file:' + systemProperties['mineiro.properties.dir'] + '/hibernate-simus.cfg.xml' :
                                  'classpath:hibernate-simus.cfg.xml'
                              }
				
			</value>
		</property>
                <property name="packagesToScan" value="br.jus.cjf.simus" />
                
	</bean>

	<bean id="simusTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<qualifier value="simusTransactionManager" />
		<property name="sessionFactory" ref="simusSessionFactory" />
	</bean>-->

	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="favicon.ico" location="favicon.ico" />

	<mvc:annotation-driven conversion-service="mineiroFormattingFactory" />
	<tx:annotation-driven />
	<context:component-scan base-package="br.jus.cjf" />

	

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">

		<property name="basename" value="/WEB-INF/messages" />

	</bean>

	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="pt_BR"/>
	</bean>


	<!-- Tiles-related configuration -->
	
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles-definitions.xml</value>
			</list>
		</property>
	</bean>
	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
		<property name="order" value="0" />
	</bean>
        
        


	<!-- Spring Security configuration -->
	
	<security:http auto-config='true' use-expressions="true">
		<security:session-management invalid-session-url="/autenticacao/sessaoInvalida"/>
		<security:intercept-url pattern="/login*" access="permitAll" />
		<security:intercept-url pattern="/logout*" access="isAuthenticated()" />
		<security:intercept-url pattern="/img/**" access="permitAll" />
		<security:intercept-url pattern="/js/**" access="permitAll" />
		<security:intercept-url pattern="/css/**" access="permitAll" />
		<security:intercept-url pattern="/favicon.ico" access="permitAll" />
		<security:intercept-url pattern="/" access="isAuthenticated()" />
		<security:intercept-url pattern="/admin/**" access="hasRole('MINEIRO - Administrador')" />
		<security:intercept-url pattern="/ordemServico/**" access="isAuthenticated()" />
		<security:intercept-url pattern="/**" access="permitAll" />
		<security:form-login authentication-details-source-ref="customWebAuthenticationDetailsSource"
                                     login-page="/autenticacao" 
                                     login-processing-url="/login"  
                                     authentication-failure-url="/autenticacao/error" />
		<security:logout invalidate-session="true" 
                                 logout-url="/logout" 
                                 logout-success-url="/" />
		<security:access-denied-handler error-page="/autenticacao" />
                
	</security:http>

      <bean id='customWebAuthenticationDetailsSource' class='br.jus.cjf.spring.util.CustomWebAuthenticationDetailsSource' />
       
	<bean id='simusAuthenticationProvider' class='br.jus.cjf.simus.service.SimusAuthenticationProvider' />
	<security:authentication-manager>
		<security:authentication-provider ref="simusAuthenticationProvider" />
           
	</security:authentication-manager>
	
	

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>

	<!-- Configuração para o scheduler -->
	
	<task:scheduler id="taskScheduler" />
	<task:executor id="taskExecutor" pool-size="5" />
	<task:annotation-driven executor="taskExecutor" scheduler="taskScheduler" />
        
        <bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="WaitForTasksToCompleteOnShutdown" value="true" />
                <property name="queueCapacity" value="25" />
	</bean>
	
	<!-- Factory para registrar os formatters personalizados -->
	
	<bean id="mineiroFormattingFactory" class="br.jus.cjf.mineiro.web.formatter.MineiroFormattingFactory" />

	<!-- Configuração do envio de email  -->
	
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="10.1.15.15"/>
        <property name="port" value="25"/>
        <property name="username" value="mineiro@cjf.jus.br"/>
        <property name="password" value=""/>
        <property name="defaultEncoding" value="UTF-8"/> 
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">false</prop>
                <prop key="mail.smtp.starttls.enable">false</prop>
                <prop key="mail.debug">false</prop>
            </props>
        </property>
    </bean>

   <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
      <property name="resourceLoaderPath" value="/WEB-INF/velocity/"/>
   </bean>

</beans>